{
    "name": "Zero-token Bank",
    "specification": "The ZeroTokenBank contract accepts deposits and withdrawals from any address. When a deposit is made, the corresponding amount is added to the account balance of the depositing address. These balances are maintained using a mapping within the contract. To withdraw funds, a user can call the withdraw function of the Bank contract with a specified amount. The contract verifies that the depositor has sufficient funds in their account and then initiates a transfer of the specified amount to the depositor's address.",
    "properties": [
        "after a successful `deposit(amount)`, the balance entry of `msg.sender` is increased by `amount`.",
        "after a successful `withdraw(amount)`, the balance entry of `msg.sender` is decreased by `amount`.",
        "a `deposit(amount)` call never reverts.",
        "a `withdraw(amount)` call does not revert if `amount` is bigger than zero and less or equal to the balance entry of `msg.sender`.",
        "the only way to increase the balance entry of a user `a` is by calling `deposit` with `msg.sender = a`.",
        "the only way to decrease the balance entry of a user `a` is by calling `withdraw` with `msg.sender = a`.",
        "`contract_balance` is always non-negative.",
        "every balance entry is always non-negative.",
        "any user can always increase their balance up to its maximum value with a single transaction.",
        "any user can always increase their balance.",
        "`contract_balance` is always greater or equal to any balance entry.",
        "`contract_balance` is always equal to the sum of the balance entries.",
        "for every user `a`, their balance entry is equal to the sum of all `amount`s in successful `deposit(amount)` with `msg.sender = a` minus those in successful `withdraw(amount)` with `msg.sender = a`.",
        "any user can always withdraw their whole balance entry in a single transaction.",
        "any user can always withdraw their whole balance entry in a finite sequence of transaction.",
        "for every user `a`, the sum of all `amount`s withdrawn by `a` is less or equal to the sum of all `amount`s deposited by `a`.",
        "any transaction made by a user will have the same effect when frontrun by a single transaction made by a different user.",
        "any transaction made by a user will have the same effect when frontrun by a finite sequence of transactions made by different users."
    ]
}
